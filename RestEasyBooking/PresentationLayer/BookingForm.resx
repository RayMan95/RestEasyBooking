<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="startdatebutton.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>